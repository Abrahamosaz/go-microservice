{{template "base" .}}

{{define "content" }}
    <div class="container">
        <div class="row">
            <div class="col">
                <h1 class="mt-5">Test microservices</h1>
                <hr>

                <a id="brokerBtn" class="btn btn-outline-secondary" href="javascript:void(0);" class="btn btn-primary">Test Broker</a>
                <a id="authBrokerBtn" class="btn btn-outline-secondary" href="javascript:void(0);" class="btn btn-primary">Test Auth</a>
                <a id="logBtn" class="btn btn-outline-secondary" href="javascript:void(0);" class="btn btn-primary">Test Log</a>
                <a id="mailBtn" class="btn btn-outline-secondary" href="javascript:void(0);" class="btn btn-primary">Test Mail</a>
                <a id="logGRPCBtn" class="btn btn-outline-secondary" href="javascript:void(0);" class="btn btn-primary">Test GRPC</a>

                
                <div id="output" class="mt-5" style="outline: 1px solid silver; padding: 2em;">
                    <span class="text-muted">Output shows here...</span>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col">
                <h4 class="mt-5">Sent</h4>
                <div class="mt-1" style="outline: 1px solid silver; padding: 2em;">
                    <pre id="payload"><span class="text-muted">Nothing sent yet...</span></pre>
                </div>
            </div>
            <div class="col">
                <h4 class="mt-5">Received</h4>
                <div class="mt-1" style="outline: 1px solid silver; padding: 2em;">
                    <pre id="received"><span class="text-muted">Nothing received yet...</span></pre>
                </div>
            </div>
        </div>
    </div>
{{end}}

{{define "js"}}
    <script>
    let brokerBtn = document.getElementById("brokerBtn");
    let AuthBrokerBtn = document.getElementById("AuthBrokerBtn");
    let logBtn = document.getElementById("logBtn");
    let mailBtn = document.getElementById("mailBtn");
    let logGRPCBtn = document.getElementById("logGRPCBtn");

    let output = document.getElementById("output");
    let sent = document.getElementById("payload");
    let received = document.getElementById("received");


    mailBtn.addEventListener("click", (e) => {
        e.preventDefault();

        const payload = {
            action: "mail",
            mail: {
                from: "me@example.com",
                to: "you@example.com",
                subject: "Test mail",
                message: "This is a test mail"
            }
        }

        const headers = new Headers();
        headers.append("Content-Type", "application/json");

        const body = {
            method: "POST",
            headers: headers,
            body: JSON.stringify(payload)
        }

        fetch("http://localhost:5000/handle", body)
            .then(response => response.json())
            .then(data => {
                sent.innerHTML = JSON.stringify(payload, undefined, 4);
                received.innerHTML = JSON.stringify(data, undefined, 4);

                if (data.error) {
                    output.innerHTML += `<br><strong>Error</strong>: ${data.message}`
                } else {
                    output.innerHTML += `<br><strong>Response from broker service</strong>: ${data.message}`
                }
            })
            .catch(err => {
                sent.innerHTML = "Error: " + err;
            })
    })


    logGRPCBtn.addEventListener("click", (e) => {
        e.preventDefault();

        const payload = {
            action: "log",
            log: {
                name: "event",
                data: "some kind of gRPC data"
            }
        }

        const headers = new Headers();
        headers.append("Content-Type", "application/json");

        const body = {
            method: "POST",
            headers: headers,
            body: JSON.stringify(payload)
        }

        fetch("http://localhost:5000/log-grpc", body)
            .then(response => response.json())
            .then(data => {
                sent.innerHTML = JSON.stringify(payload, undefined, 4);
                received.innerHTML = JSON.stringify(data, undefined, 4);

                if (data.error) {
                    output.innerHTML += `<br><strong>Error</strong>: ${data.message}`
                } else {
                    output.innerHTML += `<br><strong>Response from broker service</strong>: ${data.message}`
                }
            })
            .catch(err => {
                output.innerHTML = "Error: " + err;
            })
    })

    logBtn.addEventListener("click", (e) => {
        e.preventDefault();

        const payload = {
            action: "log",
            log: {
                name: "event",
                data: "some kind of data"
            }
        }

        const headers = new Headers();
        headers.append("Content-Type", "application/json");

        const body = {
            method: "POST",
            headers: headers,
            body: JSON.stringify(payload)
        }

        fetch("http://localhost:5000/handle", body)
            .then(response => response.json())
            .then(data => {
                sent.innerHTML = JSON.stringify(payload, undefined, 4);
                received.innerHTML = JSON.stringify(data, undefined, 4);

                if (data.error) {
                    output.innerHTML += `<br><strong>Error</strong>: ${data.message}`
                } else {
                    output.innerHTML += `<br><strong>Response from broker service</strong>: ${data.message}`
                }
            })
            .catch(err => {
                output.innerHTML = "Error: " + err;
            })
    })


    authBrokerBtn.addEventListener("click", (e) => {
        e.preventDefault();

        const payload = {
            action: "auth",
            auth: {
                email: "admin@example.com",
                password: "verysecret"
            }
        }

        const headers = new Headers();
        headers.append("Content-Type", "application/json");

        const body = {
            method: "POST",
            headers: headers,
            body: JSON.stringify(payload)
        }

        fetch("http://localhost:5000/handle", body)
            .then(response => response.json())
            .then(data => {
                sent.innerHTML = JSON.stringify(payload, undefined, 4);
                received.innerHTML = JSON.stringify(data, undefined, 4);

                if (data.error) {
                    output.innerHTML += `<br><strong>Error</strong>: ${data.message}`
                } else {
                    output.innerHTML += `<br><strong>Response from broker service</strong>: ${data.message}`
                }
            })
            .catch(err => {
                output.innerHTML = "Error: " + err;
            })
    })

 
    brokerBtn.addEventListener("click", (e) => {
        e.preventDefault();

        const body = {
            method: "POST"
        }

        fetch("http://localhost:5000")
            .then(response => response.json())
            .then(data => {
                sent.innerHTML = "empty post request";
                received.innerHTML = JSON.stringify(data, undefined, 4);

                if (data.error) {
                    console.log("Error: ", data.message);
                } else {
                    output.innerHTML += `<br><strong>Response from broker service</strong>: ${data.message}`
                }
            })
            .catch(err => {
                output.innerHTML = "Error: " + err;
            })
    })

    </script>
{{end}}
