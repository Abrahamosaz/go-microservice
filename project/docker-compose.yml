version: "3"

services:
  broker-service:
    build:
      context: ./../broker-service
      dockerfile: ./../broker-service/Dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    depends_on:
      - rabbitmq

  auth-service:
    build:
      context: ./../auth-service
      dockerfile: ./../auth-service/Dockerfile
    restart: always
    ports:
      - "5003:5003"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      - DSN=postgres://ab:abraham@auth-postgres:5432/auth_db?sslmode=disable
    depends_on:
      - auth-postgres

  logger-service:
    build:
      context: ./../logger-service
      dockerfile: ./../logger-service/Dockerfile
    restart: always
    ports:
      - "5004:5004"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      - DSN=mongodb://admin:password@logger-mongo:27017/logs
    depends_on:
      - logger-mongo

  mail-service:
    build:
      context: ./../mail-service
      dockerfile: ./../mail-service/Dockerfile
    environment:
      MAIL_DOMAIN: localhost
      MAIL_HOST: mailhog
      MAIL_PORT: 1025
      MAIL_USERNAME: ""
      MAIL_PASSWORD: ""
      MAIL_ENCRYPTION: none
      MAIL_FROM_NAME: "Abraham"
      MAIL_FROM_ADDRESS: "abraham@gmail.com"

    restart: always
    ports:
      - "5005:5005"
    deploy:
      mode: replicated
      replicas: 1
    depends_on:
      - mailhog

  listener-service:
    build:
      context: ./../listener-service
      dockerfile: ./../listener-service/Dockerfile
    environment:
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
    restart: always
    ports:
      - "5006:5006"
    deploy:
      mode: replicated
      replicas: 1
    depends_on:
      - rabbitmq

  auth-postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: ab
      POSTGRES_PASSWORD: abraham
      POSTGRES_DB: auth_db
    ports:
      - "5432:5432"
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - ./db-data/auth-postgres:/var/lib/postgresql/data

  logger-mongo:
    image: mongo:latest
    environment:
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    ports:
      - "27018:27017"
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - ./db-data/logger-mongo:/data/db

  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - "1025:1025"
      - "8025:8025"

  rabbitmq:
    image: "rabbitmq:4.1.0-alpine"
    ports:
      - "5672:5672"
    deploy:
      mode: replicated
      replicas: 1
    restart: always
    volumes:
      - ./db-data/rabbitmq:/var/lib/rabbitmq
