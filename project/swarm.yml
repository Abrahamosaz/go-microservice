version: "3"

services:
  caddy:
    image: abrahamosaz/micro-caddy:1.0.0
    deploy:
      mode: replicated
      replicas: 1
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - caddy_data:/data
      - caddy_config:/config

  front-end:
    image: abrahamosaz/front-end:1.0.1
    deploy:
      mode: replicated
      replicas: 1
    environment:
      - BROKER_URL=http://backend

  broker-service:
    image: abrahamosaz/broker-service:1.0.2
    ports:
      - "5000:5000"
    deploy:
      mode: replicated
      replicas: 1

  listener-service:
    image: abrahamosaz/listener-service:1.0.0
    deploy:
      mode: replicated
      replicas: 1

  auth-service:
    image: abrahamosaz/auth-service:1.0.0
    deploy:
      mode: replicated
      replicas: 1
    environment:
      - DSN=postgres://ab:abraham@auth-postgres:5432/auth_db?sslmode=disable

  logger-service:
    image: abrahamosaz/logger-service:1.0.1
    deploy:
      mode: replicated
      replicas: 1
    environment:
      - DSN=mongodb://admin:password@logger-mongo:27017/logs

  mail-service:
    image: abrahamosaz/mail-service:1.0.0
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MAIL_DOMAIN: localhost
      MAIL_HOST: mailhog
      MAIL_PORT: 1025
      MAIL_USERNAME: ""
      MAIL_PASSWORD: ""
      MAIL_ENCRYPTION: none
      MAIL_FROM_NAME: "Abraham"
      MAIL_FROM_ADDRESS: "abraham@gmail.com"

  rabbitmq:
    image: "rabbitmq:4.1.0-alpine"
    deploy:
      mode: global

  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - "8025:8025"
    deploy:
      mode: global

  logger-mongo:
    image: mongo:latest
    ports:
      - "27018:27017"
    deploy:
      mode: global
    environment:
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ./db-data/logger-mongo:/data/db

  auth-postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: ab
      POSTGRES_PASSWORD: abraham
      POSTGRES_DB: auth_db
    ports:
      - "5432:5432"
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - ./db-data/auth-postgres:/var/lib/postgresql/data

volumes:
  caddy_data:
    external: true
  caddy_config: